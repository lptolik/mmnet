textBar <- function(x = sort(runif(5))) {
for (i in c(0, x, 1)) {
Sys.sleep(0.5)
setTxtProgressBar(pb, i)
}
}
init.value <- seq(0, 1, by = 0.2)
message("In annotation...")
a=1
while (a<10000) {
tryCatch({
textBar(init.value)
a=a+1
},
error = function(err) {stop(simpleError("Your Internet not connected or MGRAST host
can not be connetecd, please try later"))}
)}
pb <- txtProgressBar(width = 40)
textBar <- function(x = sort(runif(5))) {
for (i in c(0, x, 1)) {
Sys.sleep(0.5)
setTxtProgressBar(pb, i)
}
}
init.value <- seq(0, 1, by = 0.2)
message("In annotation...")
a=1
while (a<10000) {
tryCatch({
textBar(init.value)
a=a+1
},
error = function(err) stop("Your Internet not connected or MGRAST host
can not be connetecd, please try later")
)}
pb <- txtProgressBar(width = 40)
textBar <- function(x = sort(runif(5))) {
for (i in c(0, x, 1)) {
Sys.sleep(0.5)
setTxtProgressBar(pb, i)
}
}
init.value <- seq(0, 1, by = 0.2)
message("In annotation...")
a=1
while (a<10000) {
tryCatch({
textBar(init.value)
a=a+1
},
interrupt = function(err) stop("Your Internet not connected or MGRAST host
can not be connetecd, please try later")
)}
pb <- txtProgressBar(width = 40)
textBar <- function(x = sort(runif(5))) {
for (i in c(0, x, 1)) {
Sys.sleep(0.5)
setTxtProgressBar(pb, i)
}
}
init.value <- seq(0, 1, by = 0.2)
message("In annotation...")
a=1
while (a<10000) {
tryCatch({
textBar(init.value)
a=a+1
},
error = function(err) stop("Your Internet not connected or MGRAST host
can not be connetecd, please try later")
)}
pb <- txtProgressBar(width = 40)
textBar <- function(x = sort(runif(5))) {
for (i in c(0, x, 1)) {
Sys.sleep(0.5)
setTxtProgressBar(pb, i)
}
}
init.value <- seq(0, 1, by = 0.2)
message("In annotation...")
a=1
while (a<10000) {
tryCatch({
textBar(init.value)
a=a+1
},
interrupt = function(err) stop("Your Internet not connected or MGRAST host
can not be connetecd, please try later")
)}
source("c:/work//mmnet//mmnet/R/runMgrastAnnotation.R")
source("c:/work//mmnet//mmnet/R/runMgrastAnnotation.R")
runMgrastAnnotation(login.info,"c:/work/mmnet/test.fna")
?file
??filesize
help.search("file size")
?object.size
?list.files
file.info("c:/work/mmnet/test.fna")
file.info("c:/work/mmnet/test.fna")$size
1024^2
source("c:/work//mmnet//mmnet/R/runMgrastAnnotation.R")
runMgrastAnnotation(login.info,"c:/work/mmnet/test.fna")
runMgrastAnnotation(login.info,"c:/work/mmnet/test.fna")
runMgrastAnnotation(login.info,"c:/work/mmnet/test.fna")
runMgrastAnnotation(login.info,"c:/work/mmnet/test.fna")
getForm("http://metagenomics.anl.gov/metagenomics.cgi?page=Upload&action=check_for_duplicates&seqfiles=507.fna")
getURL("http://metagenomics.anl.gov/metagenomics.cgi?page=Upload&action=check_for_duplicates&seqfiles=507.fna")
getForm("http://metagenomics.anl.gov/metagenomics.cgi",page="Upload"
,action="check_for_duplicates",
seqfiles="507.fna")
login.info
auth=login.info$session
getForm("http://metagenomics.anl.gov/metagenomics.cgi",auth=auth,page="Upload"
,action="check_for_duplicates",
seqfiles="507.fna")
postForm("http://metagenomics.anl.gov/metagenomics.cgi",auth=auth,page="Upload"
,action="check_for_duplicates",
seqfiles="507.fna")
postForm("http://metagenomics.anl.gov/metagenomics.cgi?page=Upload",auth=auth
,action="check_for_duplicates",
seqfiles="507.fna")
postForm("http://metagenomics.anl.gov/metagenomics.cgi?page=Upload",auth=auth
,action="check_for_duplicates",curl = login.info$curlhandle,
seqfiles="507.fna")
postForm("http://metagenomics.anl.gov/metagenomics.cgi?page=Upload",auth=auth
,action="check_for_duplicates",curl = login.info$curlhandle,
seqfiles="507.fna")
getForm("http://metagenomics.anl.gov/metagenomics.cgi?page=Upload",auth=auth
,action="check_for_duplicates",curl = login.info$curlhandle,
seqfiles="507.fna")
a=getForm("http://metagenomics.anl.gov/metagenomics.cgi?page=Upload",auth=login.info$session,
,action="check_for_duplicates",curl = login.info$curlhandle,
seqfiles=seqfile)
a=getForm("http://metagenomics.anl.gov/metagenomics.cgi?page=Upload",auth=login.info$session,
,action="check_for_duplicates",curl = login.info$curlhandle,
seqfiles="507.fna")
a=getForm("http://metagenomics.anl.gov/metagenomics.cgi?page=Upload",auth=login.info$session,
,action="check_for_duplicates",curl = login.info$curlhandle,
seqfiles="507.fna")
getForm("http://metagenomics.anl.gov/metagenomics.cgi?page=Upload",auth=auth
,action="check_for_duplicates",curl = login.info$curlhandle,
seqfiles="507.fna")
auth
getForm("http://metagenomics.anl.gov/metagenomics.cgi?page=Upload",auth=login.info$session
,action="check_for_duplicates",curl = login.info$curlhandle,
seqfiles="507.fna")
a=getForm("http://metagenomics.anl.gov/metagenomics.cgi?page=Upload",auth=login.info$session
,action="check_for_duplicates",curl = login.info$curlhandle,
seqfiles="507.fna")
b=htmlParse(a)
b
class(b)
length(b)
b[1]
b\
b
?str_extract
str_extract(a,"The folloing")
str_extract(a,"The following")
str_extract(a,"The following*$")
str_extract(a,"The following\\.$")
str_extract(a,"The following$")
paste("507.fna", str_extract(a,"already exist in MGRAST")
)
paste("507.fna", str_extract(a,"already exist in MGRAST")
)
str_extract(a,"already exist in MGRAST")
str_extract(a,"already exist in MG-RAST")
paste("507.fna", str_extract(a,"already exist in MG-RAST"))
help(package="XML")
readHTMLTable(a)
d=readHTMLTable(a)
d
str_extract(a,"\\d+\\.\\d+")
getForm("http://metagenomics.anl.gov/metagenomics.cgi?page=Upload",auth=login.info$session
,action="check_for_duplicates",curl = login.info$curlhandle,
seqfiles="507.fna")
getForm("http://metagenomics.anl.gov/metagenomics.cgi?page=Upload",auth=login.info$session
,action="check_for_duplicates",curl = login.info$curlhandle,
seqfiles="test.fna")
grepl("already exist in MG-RAST"),a)
grepl("already exist in MG-RAST"))
grepl("already exist in MG-RAST",a)
check.dup=a
if (grepl("already exist in MG-RAST",check.dup)){
warning(paste(seqfile, "already exist in MG-RAST","\n", "existing ID:", str_extract(check.dup, "\\d+\\.\\d+")))
return(NULL)
}
seqfile="507.fna"
if (grepl("already exist in MG-RAST",check.dup)){
warning(paste(seqfile, "already exist in MG-RAST","\n", "existing ID:", str_extract(check.dup, "\\d+\\.\\d+")))
return(NULL)
}
source("c:/work/mmnet/mmnet/R/submitMgrastJob.R")
submitMgrastJob(login.info,"507,fna")
submitMgrastJob(login.info,"507.fna")
submitMgrastJob(login.info,seqfile="507.fna")
getForm("http://metagenomics.anl.gov/metagenomics.cgi?page=Upload",auth=login.info$session,
,action="check_for_duplicates",curl = login.info$curlhandle,
seqfiles=seqfile)
seqfile
getForm("http://metagenomics.anl.gov/metagenomics.cgi?page=Upload",auth=login.info$session,
,action="check_for_duplicates",curl = login.info$curlhandle,
seqfiles="507.fna")
getForm("http://metagenomics.anl.gov/metagenomics.cgi?page=Upload",auth=login.info$session
+         ,action="check_for_duplicates",curl = login.info$curlhandle,
+         seqfiles="test.fna")
getForm("http://metagenomics.anl.gov/metagenomics.cgi?page=Upload",auth=login.info$session
+         ,action="check_for_duplicates",curl = login.info$curlhandle,
+         seqfiles="test.fna")
getForm("http://metagenomics.anl.gov/metagenomics.cgi?page=Upload",auth=login.info$session
,action="check_for_duplicates",curl = login.info$curlhandle,seqfiles="test.fna")
getForm("http://metagenomics.anl.gov/metagenomics.cgi?page=Upload",auth=login.info$session
,action="check_for_duplicates",curl = login.info$curlhandle,seqfiles="test.fna")
getForm("http://metagenomics.anl.gov/metagenomics.cgi?page=Upload",auth=login.info$session
,action="check_for_duplicates",curl = login.info$curlhandle,seqfiles="507.fna")
getForm("http://metagenomics.anl.gov/metagenomics.cgi?page=Upload",auth=login.info$session
,action="check_for_duplicates",curl = login.info$curlhandle,seqfiles=seqfile)
getForm("http://metagenomics.anl.gov/metagenomics.cgi?page=Upload",auth=login.info$session,
,action="check_for_duplicates",curl = login.info$curlhandle,
seqfiles=seqfile)
source("c:/work/mmnet/mmnet/R/submitMgrastJob.R")
submitMgrastJob(login.info,seqfile="507.fna")
source("c:/work/mmnet/mmnet/R/submitMgrastJob.R")
submitMgrastJob(login.info,seqfile="507.fna")
is.list
?is.list
a=submitMgrastJob(login.info,seqfile="507.fna")
class(a)
is.character
is.character(a)
getMgrastAnnotation(paste0("mgm", metagenome), resource = c(source = "KO",
type = "ontology"), login.info = login.info)
metagenome=a
getMgrastAnnotation(paste0("mgm", metagenome), resource = c(source = "KO",
type = "ontology"), login.info = login.info)
anno=getMgrastAnnotation(paste0("mgm", metagenome), resource = c(source = "KO",
type = "ontology"), login.info = login.info)
anno
metagenome
?str_exact
?str_stract
?str_extract
log(-1:2)
f <- function(a) g(a)
g <- function(b) h(b)
h <- function(c) i(c)
i <- function(d) "a" + d
f(10)
traceback()
f <- function(a) g(a)
g <- function(b) h(b)
h <- function(c) i(c)
i <- function(d) "a" + d
f(10)
f <- function(a) g(a)
g <- function(b) h(b)
h <- function(c) i(c)
i <- function(d) "a" + d
f(10)
f <- function(a) g(a)
g <- function(b) h(b)
h <- function(c) i(c)
i <- function(d) "a" + d
f(10)
f <- function(a) g(a)
g <- function(b) h(b)
h <- function(c) i(c)
i <- function(d) "a" + d
f(10)
g
f <- function(a) g(a)
g <- function(b) h(b)
h <- function(c) i(c)
i <- function(d) "a" + d
f(10)
f <- function(a) g(a)
g <- function(b) h(b)
h <- function(c) i(c)
i <- function(d) "a" + d
f(10)
f <- function(a) g(a)
g <- function(b) h(b)
h <- function(c) i(c)
i <- function(d) "a" + d
f(10)
condition <- function(subclass, message, call = sys.call(-1), ...) {
structure(
class = c(subclass, "condition"),
list(message = message, call = call),
...
)
}
c <- condition(c("my_error", "error"), "This is an error")
c
class(c)
length(c)
class(c)[1]
class(c)[2]
class(c)[3]
?tryCatch
help(package="RCPP")
install.packages("rapport")
help(package="rapport")
library(rapport)
rapport("example", ius2008, var = "it.leisure")
?demo
demo(package = .packages(all.available = TRUE))
demo(rapport)
help(package="ggplot2")
p <- qplot(wt, mpg, data = mtcars)
p
p + geom_abline()
p + geom_abline(intercept = 20)
p + geom_abline(slope=1, intercept = 20)
x=c(1:20)
y=c(10:30)
qplot(x,y)
qplot(c(x,y)
)
qlot(x,y)
qplot(x,y)
?qplot
x
y
y=c(11:30)
qplot(x,y)
qplot(x,y)+geom_abline(slope=1)
qplot(x,y)+geom_abline(slope=1,intercepe=0)
qplot(x,y)+geom_abline(slope=1,intercept=0)
qplot(x,y)+geom_abline(slope=1,intercept=20)
qplot(x,y)+geom_abline(slope=1,intercept=0)
qplot(x,y)+geom_abline(slope=1,intercept=0)
geom_abline(intercept=0, slope=1)
qplot(x,y)+geom_abline(slope=1,intercept=0)
qplot(x,y)+geom_abline(intercept=0, slope=1)
qplot(x,y)+geom_abline(intercept=0, slope=1,colour="blue")
aes(x = mpg, y = wt)
qplot(x,y)+geom_abline(intercept=0, slope=1,colour="blue")+aes_string("xxx")
qplot(x,y)+geom_abline(intercept=0, slope=1,colour="blue")+aes("xxx")
qplot(x,y)+geom_abline(intercept=0, slope=1,colour="blue")+
qplot(x,y)+geom_abline(intercept=0, slope=1,colour="blue",size=4)
qplot(x,y)+geom_abline(intercept=0, slope=1,colour="blue",size=2)
qplot(x,y)+geom_abline(intercept=0, slope=1,colour="blue",size=1)
qplot(x,y)+geom_abline(intercept=0, slope=1,colour="blue",size=1)+aes(x)
qplot(x,y)+geom_abline(intercept=0, slope=1,colour="blue",size=1)+aes(x,y)
?aes
aes(x = mpg, y = wt)
aes(x = mpg ^ 2, y = wt / cyl)
qplot(x,y)+geom_abline(intercept=0, slope=1,colour="blue",size=1)+xlim(x)
qplot(x,y)+geom_abline(intercept=0, slope=1,colour="blue",size=1)+xlim(1:40)
?xlim
qplot(x,y)+geom_abline(intercept=0, slope=1,colour="blue",size=1)+xlim(1,40)
x
y
qplot(x,y)+geom_abline(intercept=0, slope=1,colour="blue",size=1)+xlim(1,30)+ylim(1,30)
qplot(x,y)+geom_abline(intercept=0, slope=1,colour="blue",size=1)+xlim(1,30)+ylim(1,30)+aes("mmnet")
qplot(x,y)+geom_abline(intercept=0, slope=1,colour="blue",size=1)+xlim(1,30)+ylim(1,30)+aes_string("mmnet")
qplot(x,y)+geom_abline(intercept=0, slope=1,colour="blue",size=1)+xlim(1,30)+ylim(1,30)+labs(ggtitle="comparison", xlab="mmnet", "mgrast")
?labs
qplot(x,y)+geom_abline(intercept=0, slope=1,colour="blue",size=1)+xlim(1,30)+ylim(1,30)+labs(title="comparison", xlab="mmnet", "mgrast")
qplot(x,y)+geom_abline(intercept=0, slope=1,colour="blue",size=1)+xlim(1,30)+ylim(1,30)+labs(title="comparison")+xlab("mmnet")+yla("mgrast")
qplot(x,y)+geom_abline(intercept=0, slope=1,colour="blue",size=1)+xlim(1,30)+ylim(1,30)+labs(title="comparison")+xlab("mmnet")+ylab("mgrast")
p <- qplot(mpg, cyl, data = mtcars, alpha = cyl))
p <- qplot(mpg, cyl, data = mtcars, alpha = cyl)p
p <- qplot(mpg, cyl, data = mtcars, alpha = cyl)
p
p + scale_alpha("cylinders")
p <- ggplot(mtcars, aes(x = wt, y = mpg)) + geom_point()
p
p + annotate("text", x = 4, y = 25, label = "Some text")
p + annotate("text", x = 4, y = -5, label = "Some text")
p + annotate("text", x = 4, y = 0, label = "Some text")
p + annotate("text", x = 4, y = -1, label = "Some text")
p + annotate("text", x = 4, y = -2, label = "Some text")
p + annotate("text", x = 4, y = -5, label = "Some text")
p + labs(title="My Nice Graph") + theme(plot.title = element_text(vjust=2))
p + labs(title="My Nice Graph\n") + theme(plot.title = element_text(vjust=2))
p + labs(title="My Nice Graph\n") + theme(plot.title = element_text(hjust = 0))
p + labs(title="My Nice Graph\n") + theme(plot.title = element_text(hjust = 0,vjust=0))
help(package="mmnet")
library(mmnet)
data(mgp10Anno)
names(mgp10Anno)
anno=mgp10Anno[c(1,4)]
anno
?save
save(anno,file="anno.rda", compress="xz")
getwd()
load("anno.rda")
class(anno.rda)
class(anno)
names(anno)
names(anno)=c("4440616.3","4440823.3")
save(anno,file="anno.rda", compress="xz")
load("anno.rda")
names(anno)
pkg=c("biom","igraph","Biobase","RJSONIO","stringr","reshape2",
"ggplot2","KEGGREST","plyr","XML","RCurl","flexmix","Matrix","methods","tools")
sapply(pkg,library,character.only=TRUE)
?dplyr
help(package="dplyr")
library(dplyr)
a=c(1,3,4)
names(a)=c("a","b","c")
a
b=c("a"=2,"b"=1)
b
inner_join(a,b)
b=df("a"=2,"b"=1)
b
b=data.frame("a"=2,"b"=1)
b
a=data.frame("a"=1,"b"=3,"c"=4)
a
b
inner_join(a,b)
a
b
a=t(a)
b=t(b)
class(a)
a=as.data.frame(a)
b=as.data.frame(b)
a
b
inner_join(a,b)
help(package="plyr")
n <- 17; fac <- factor(rep(1:3, length = n), levels = 1:5)
table(fac)
fac
vaggregate(1:n, fac, sum)
x <- data.frame(
name = c("John", "Paul", "George", "Ringo", "Stuart", "Pete"),
instrument = c("guitar", "bass", "guitar", "drums", "bass",
"drums")
)
y <- data.frame(
name = c("John", "Paul", "George", "Ringo", "Brian"),
band = c("TRUE", "TRUE", "TRUE", "TRUE", "FALSE")
)
x
y
inner_join(x, y)
left_join(x, y)
y <- data.frame(
name = c("John", "Paul", "George", "Ringo", "Brian","test"),
band = c("TRUE", "TRUE", "TRUE", "TRUE", "FALSE","FALSE")
)
y
left_join(x, y)
y
?join
?aggregate
?merge
aggregate
?aggregate
merge(x,y)
x
y
?merge
merge(x,y,by=union(x[1],y[1]))
names(x)
merge(x,y,by=union(x["name"],y["name"]))
merge(x,y,all=T
)
merge(x,y,all=T,nomatch=0)
merge
?get.vertex.attribute
setwd("f:/cy/mmnet/R")
load("../data/anno.rda")
abund <- estimateAbundance(anno)
ssn <- constructSSN(abund)
?source
sourceDir <- function(path, trace = TRUE, ...) {
for (nm in list.files(path, pattern = "[.][RrSsQq]$")) {
if(trace) cat(nm,":")
source(file.path(path, nm), ...)
if(trace) cat("\n")
}
}
sourceDir(".
")
sourceDir('.')
abund <- estimateAbundance(anno)
ssn <- constructSSN(abund)
load("../data/RefDbcache.rda")
constructSSN(abund)
abund
constructSSN(abund)
constructSSN
biom
help(package="biom")
help(package="mmnet")
mmnet::const\
mmnet::constructSSN(abund)
ssns=mmnet::constructSSN(abund)
abund <- lapply(ssns, get.vertex.attribute, name="abundance" )
abund
class(abund)
do.call(abund,merge)
?do.call
do.call(merge,abund)
class(abund)
names
names(abund[[1]])
do.call(merge,abund)
merge(abund[1])
merge(abund[1],abund[2])
merge(abund[1],abund[2])
a=merge(abund[1],abund[2])
a
