%\VignetteIndexEntry{mmnet}
%\VignetteKeywords{metagenome, KEGG pathway, network}
%\VignettePackage{mmnet}

\documentclass[a4paper]{article}
\usepackage{times}
\usepackage{natbib}
\usepackage{hyperref}
\usepackage{amsmath}
\usepackage[utf8]{inputenc}
\usepackage{geometry}
\usepackage{longtable}
\usepackage[pdftex]{graphicx}
\SweaveOpts{keep.source=TRUE,eps=FALSE,pdf=TRUE,prefix=TRUE} 

\title{mmnet: Metagenomic analysis of microbiome metabolic network}
\author{Yang Cao, Fei Li, Xiaochen Bo}

\begin{document}
\bibliographystyle{plainnat}
\maketitle
\tableofcontents

\section{Introduction}

The package \emph{mmnet} provides an implementation of metagenome system analysis of metagenomic data in R. 
It utilizes a metagenomic systems biology computational framework mentioned in 
\citep{greenblum2012metagenomic}, integrating metagenomic data with a system-level network analysis. 
Metagenomic short reads is annotated on MGRAST server\citep{glass2010using}. Software infrastructure is 
provided by two different packages,

\vspace{2ex}
\textbf{KEGGREST}: Provides the method to get reference enzymatic data from the Kyoto Encyclopedia 
of Genes and Genomes (KEGG)database \citep{kanehisa2000kegg}.

\vspace{2ex}
\textbf{igraph}: Provides graph interface to plot system-level network.

\vspace{2ex}
This manual is a brief introduction to structure, functions and usage of \emph{mmnet} package. It 
demonstrates how to easily construct a system-level network with metagenomic data.

\section{Software Features}

First, metagenomic data was annotated using the KEGG database to
identify enzymatic genes on MGRAST. And then we parse annotated data to get the KEGG annotation 
(ec number). Finally, mapping the enzymatic genes to reference KEGG enzymatic data to construct system-level 
network and analyze it. Package \emph{mmnet} offers the following three 
functionalities:

\emph{Parsing}: It requires parsing both the KEGG reference metabolic pathway
and the annotated data to obtain reference enzymatic data and enzymatic genes. We 
save an initial reference data named \emph{KEGGPathwayInfo} in "data" subdirectory of \emph{mmnet}. 
However, KEGG metabolic pathway updated frequently, user can update the  reference enzymatic data manually 
by function \emph{getKEGGPathwayInfo}.

\emph{Network Constructing}: \emph{mmnet} provides function to create graph from adjacency matrices, where nodes represent 
enzymes and edge between two enzymes which have intersection of the substrate and product. 

\emph{Visualization}: Two functions is used for visualization. The first one is 
mapping the annotated data on KEGG global metabolic pathway. Another one is 
mapping to the reference enzymatic data of KEGG metabolic pathway to construct a system-level network. 

\section{Implementation Details}

\subsection{Getting Started}

This package requires metagenomic data preprocessing as well as functional annotation. Therefore, 
users should annotate the data with the MGRAST server or other metagenomic annotation platforms 
which need convert the annotation file format to it in  MGRAST.
   
User can load the \emph{mmnet} by typing or pasting the following 
codes in R command line:
<<>>=
library(mmnet)
@

\subsection{Reference KEGG Data} 

KEGG is a database resource for system analysis of gene functions and utilities
 of the biological system, such as large-scale molecular datasets generated by 
genome sequencing \citep{kanehisa2008kegg}.
 
The KEGG metabolic pathway is the best organized part of KEGG PATHWAY database, and also is a network of enzyme-enzyme relations 
\citep{kanehisa2000kegg}. It is composed of enzyme, substrate and product of enzyme, and have been applied 
widely to create genome-scale metabolic networks of various microbial species 
\citep{oberhardt2009applications}. The \emph{mmnet} provides a function 
\emph{getKEGGPathwayInfo} to get the reference enzymatic data from metabolic pathway graph.

\textbf{Note}: There is an initial reference enzymatic data saved in \emph{mmnet}. Function \emph{getKEGGPathwayInfo}
is just for updating, whereas it assumes that the user has an Internet connection.

<<echo=TRUE>>=
data(KEGGPathwayInfo)
summary(KEGGPathwayInfo)
mapply(function(x)x[c(8,9,10)],KEGGPathwayInfo)
@

\subsection{Parsing Annotated metagenomic data}

MGRAST server is a web-based, automated analysis platform for metagenomic data 
\citep{glass2010using}. User can upload metagenomic data to MGRAST server, 
and then create a job to analyze. After computation, user can download
your annotated data and the public data shared in MGRAST, or get the data from the API of MGRAST. 
To demonstrate the functionality, in "data" subdirectory of \emph{mmnet}
 we have pre-installed annotated data named "\emph{test.ontology}".

For more details, please visit the MGRAST server.

Once annotation data was obtained, user can parse it to get enzymatic genes
with function \emph{parseMGRASTAnno}.

<<parseMGRASTAnno>>=
data(test.ontology)
summary(test.ontology)
KEGGAnno=parseMGRASTAnno(test.ontology)
KEGGAnno[1:10]
@
\subsection{Network Constructing and Visualization}

The \emph{mmnet} provides function \emph{mapAnnotoKEGGPathway} for mapping the
enzymatic genes on KEGG global metabolic pathway. This function returns an url of 
colored map, users may automated open the url by optional "browse" or manually open it.

<<mapAnnotoKEGGPathway,echo=TRUE>>=
colored.map <- mapAnnotoKEGGPathway(KEGGAnno, map.color="blue")
@

The colored KEGG global metabolic map with example metagenomic data.

\begin{figure}[h]
\centering\includegraphics{ec01100.png}
\caption{A example colored KEGG global map}\label{fig:01}
\end{figure} 

The \emph{mmnet} also provides function to create graph from adjacency 
matrices. Each enzyme is assigned a set of substrate and product metabolites 
according to the reactions catalyzed by the enzyme as annotated in KEGG. 
A search is performed to identify all enzyme pairs in which a product 
metabolite of one enzyme is a substrate metabolite of the other. Directed
network edges are then drawn between each identified enzyme pair.

<<constructMetabolicNetwork>>=
g=constructMetabolicNetwork(KEGGPathwayInfo,KEGGAnno,degree.cutoff=3)
g
@

Function \emph{plot.igraph} in package \emph{igraph} was used to plot 
the system-level metabolic network.

\begin{figure}[!htbp]
  \begin{center}
<<echo=TRUE, fig=TRUE>>=
plot.igraph(g,vertex.size=4,vertex.label=NA,
            vertex.color="green",
      	    edge.width=0.3,edge.arrow.size=0.1,
            edge.arrow.width=0.1,	
            layout=layout.fruchterman.reingold)
@
\caption{A metabolic network from example metagenomic data}\label{fig:02}
\end{center}
\end{figure}

There are various packages with many functions for analyzing network.
For example, function V and E in package \emph{igraph} for showing vertex and edge of network, 
degree for showing the degree of nodes in network.

<<>>=
edge=E(g)
edge[1:5]
bt=betweenness(g, v=V(g), directed = TRUE, weights = NULL,
     nobigint = TRUE, normalized = FALSE)
bt[1:5]
node.degree=degree(g)
node.degree[1:5]
@
  
\section{Futher Directions}

At present,metagenomic short reads is not supported in our package.
Only metagenomic data have been annotated on MGRAST server or annotated data 
with the same format of MGRAST could this current version \emph{mmnet} 
analyze. We plan to achieve the metagenomic data annotation and integrate function for
other annotation analysis (e.g. IGM).

Another limitation is the network compare among samples is not integrate to our package, or 
it will could analysis the relation between diseases and metabolic pathways. Topological
analysis of the network is also not enough precise. Finally, the network constructing is 
time consuming for large-scale metagenomic data. This problems may be fixed to improve 
this package in the future, and we believe it will increase the practically of \emph{mmnet}.

\section*{Cleanup}


This is a cleanup step for the vignette on Windows; typically not
needed for users.

<<closeConnetions,results=hide>>=
allCon <- showConnections()
socketCon <- as.integer(rownames(allCon)[allCon[, "class"] == "sockconn"])
sapply(socketCon, function(ii) close.connection(getConnection(ii)) )
@

\bibliography{mmnet}

\end{document}